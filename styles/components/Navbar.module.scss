@use "../abstracts/mixins" as *;

$items: 3;
$transition-duration: 0.5s;
$transition-delay: 0.05s;
$hamburger-menu-margin: 25px;

.container {
	display: grid;
	align-items: center;
	background-color: var(--clr-neutral-400);
	position: relative;
	margin: 0 auto;
	overflow: hidden;
	.toggle {
		display: none; //hides the checkbox
		// Styles for the 'open' state, if the checkbox is checked
		&:checked {
			@include mq(small, max) {
				//Any element you need to change the style if menu is open goes here, using the sibling selector (~)
				& ~ .toggle_container .button_toggle {
					box-shadow: 0 0 0 550px rgba(0, 0, 0, 0.1),
						inset 0 0 0 20px rgba(0, 0, 0, 0.1);

					&:before {
						transform: translateY(-50%) rotate(45deg) scale(1);
					}

					&:after {
						transform: translateY(-50%) rotate(-45deg) scale(1);
					}
				}

				// Open Nav
				& ~ .menuList {
					transform: translate(50px, 50px);

					[dir="rtl"] & {
						transform: translate(-50px, 50px);
					}

					display: flex;
					place-items: center;
					place-content: center;
					flex-direction: column;
					color: var(--clr-primary-200);
					margin-bottom: 100px;

					// Restoring nav items from 'lines' in the menu icon
					.listItem {
						color: var(--clr-primary-200);
						letter-spacing: 0;
						flex: 1 1;
						pointer-events: auto;
						// height: 40px;

						width: 100%;
						line-height: 40px;
						margin-top: 0;
						opacity: 1;
						transform: scaleY(1);
						transition: $transition-duration, opacity 0.1s;

						// Setting delays for the nav items in open transition
						@for $i from 1 through $items {
							&:nth-child(#{$i}) {
								$delay: ($items - $i) * $transition-delay;
								transition-delay: $delay;
								&:before {
									transition-delay: $delay;
								}
							}
						}
						// Hide the lines
						&:before {
							opacity: 0;
							content: none;
						}
					}
				}
			}
		}
	}
}

/* Toggle Button */

.button_toggle {
	left: $hamburger-menu-margin;

	[dir="rtl"] & {
		right: $hamburger-menu-margin;
	}

	position: absolute;
	display: inline-block;
	width: 20px;
	height: 20px;
	margin: 25px;
	background-color: transparent;
	border: none;
	pointer-events: auto;
	cursor: pointer;
	border-radius: 100%;
	transition: $transition-duration + 0.1;

	// Shadow on Hover
	&:hover {
		box-shadow: 0 0 0 8px rgba(0, 0, 0, 0.1),
			inset 0 0 0 20px rgba(0, 0, 0, 0.1);
	}

	// Making the 'X' icon using `:before` and `:after` pseudo-elements
	// Initially hidden beause of `scale(0)` transformation

	&:before,
	&:after {
		position: absolute;
		content: "";
		top: 50%;
		left: 0;
		width: 100%;
		height: 2px;
		background-color: var(--clr-primary-200);
		border-radius: 5px;
		transition: $transition-duration;
	}

	&:before {
		transform: translateY(-50%) rotate(45deg) scale(0);
	}

	&:after {
		transform: translateY(50%) rotate(-45deg) scale(0);
	}
}

.menuList {
	display: flex;
	color: var(--clr-primary-200);
	justify-content: flex-start;
	height: var(--header-height);
	align-items: center;
	@include mq(small, max) {
		display: inline-block;
		height: auto;
		margin: 25px $hamburger-menu-margin 20px;
		pointer-events: none;
		transition: $transition-duration;
	}
}

// Showing nav items as lines, making up the hamburger menu icon
.listItem {
	@include mq(small) {
		&:last-of-type {
			margin-inline-start: auto;
			margin-inline-end: 2em;
		}
		&:first-of-type {
			z-index: 1;
		}
	}
	margin-inline-start: 2em;
	@include mq(small, max) {
		float: left;

		[dir="rtl"] & {
			float: right;
		}
		position: relative;
		display: inline-block;
		clear: both;
		color: transparent;
		font-size: 14px;
		letter-spacing: -6.2px;
		height: 7px;
		line-height: 7px;
		text-transform: uppercase;
		white-space: nowrap;
		transform: scaleY(0.2);
		transition: $transition-duration, opacity 1s;

		//Set delays for the nav items in close transition
		@for $i from 1 through $items {
			&:nth-child(#{$i}) {
				$delay: ($i - 1) * $transition-delay;
				transition-delay: $delay;
				&:before {
					transition-delay: $delay;
				}
			}
		}

		// Adjusting width for first line
		&:nth-child(1) {
			letter-spacing: -8px;
			[dir="rtl"] & {
				letter-spacing: -5px;
			}
		}

		// Adjusting width for second line
		&:nth-child(2) {
			letter-spacing: -7px;
			[dir="rtl"] & {
				letter-spacing: -5px;
			}
		}

		// Adjusting width for second line
		&:nth-child(3) {
			letter-spacing: -6px;
			[dir="rtl"] & {
				letter-spacing: -6px;
			}
		}

		// Adjusting the fourth element onwards
		&:nth-child(n + 4) {
			letter-spacing: -8px;
			margin-top: -7px;
			[dir="rtl"] & {
				letter-spacing: -5px;
				margin-top: -5px;
			}
			opacity: 0;
		}

		//getting lines for the hamburger menu icon
		&:before {
			position: absolute;
			content: "";
			top: 50%;
			left: 0;
			width: 100%;
			height: 2px;
			background-color: var(--clr-primary-200);
			transform: translateY(-50%) scaleY(5);
			transition: $transition-duration;
		}
	}
}

.itemLink {
	font-size: var(--fs-700);
	display: block;
	cursor: pointer;
}

.itemLink:hover {
	color: gray;
}
.itemLink:active {
	color: black;
}

.linksContainer {
	display: flex;
	justify-content: space-between;
	align-items: center;
	margin-inline-end: 2em;
}
